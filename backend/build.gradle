import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ru.ngtu'
version = '0.0.1-SNAPSHOT'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.4.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.10.5'

    implementation 'org.mapstruct:mapstruct:1.6.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.18.0'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    compileOnly 'org.projectlombok:lombok'
    implementation 'io.github.microutils:kotlin-logging:3.0.5'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation platform(SpringBootPlugin.BOM_COORDINATES)
}

dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}

tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}
